apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "secrets-manager.fullname" . }}
  labels:
    {{- include "secrets-manager.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "secrets-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "secrets-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "secrets-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          args:
          - -vault.url={{ .Values.vault.url }}
          {{- if .Values.debugEnabled }}
          - -enable-debug-log
          {{- end }}
          {{- if .Values.namespaceScopeEnabled }}
          - -watch-namespaces={{ .Release.Namespace }}
          {{- else }}
          {{- if .Values.watchNamespaces.enabled }}
          - -watch-namespaces={{ include "secrets-manager.joinListWithComma" .Values.watchNamespaces.namespaces }}
          {{- end }}
          {{- if .Values.excludeNamespaces.enabled }}
          - -exclude-namespaces={{ include "secrets-manager.joinListWithComma" .Values.excludeNamespaces.namespaces }}
          {{- end }}
          {{- end }}
          {{- if .Values.metricsAddress }}
          - -metrics-addr={{ .Values.metricsAddress }}
          {{- end }}
          {{- if .Values.reconcilePeriod }}
          - -reconcile-period={{ .Values.reconcilePeriod }}
          {{- end }}
          {{- if .Values.configBackendTimeout }}
          - -config.backend-timeout={{ .Values.configBackendTimeout }}
          {{- end }}
          {{- if .Values.vault.maxTokenTtl }}
          - -vault.max-token-ttl={{ .Values.vault.maxTokenTtl }}
          {{- end }}
          {{- if .Values.vault.tokenPollingPeriod }}
          - -vault.token-polling-period={{ .Values.vault.tokenPollingPeriod }}
          {{- end }}
          {{- if .Values.vault.renewTtlIncrement }}
          - -vault.renew-ttl-increment={{ .Values.vault.renewTtlIncrement }}
          {{- end }}
          {{- if .Values.vault.engine }}
          - -vault.engine={{ .Values.vault.engine }}
          {{- end }}
          {{- if .Values.vault.approlePath }}
          - -vault.approle-path={{ .Values.vault.approlePath }}
          {{- end }}
          {{- if .Values.vault.kubernetesPath }}
          - -vault.approle-path={{ .Values.vault.kubernetesPath }}
          {{- end }}
          {{- if .Values.appRoleSecret.enabled }}
          - -vault.auth-method=approle
          {{- else if .Values.kubernetesAuth.enabled }}
          - -vault.auth-method=kubernetes
          - -vault.kubernetes-role={{ include "secrets-manager.kubernetesRoleName" . }}
          {{- else -}}
          - -vault.auth-method=approle
          {{- end -}} }}
          env:
            {{- if .Values.appRoleSecret.enabled }}
            - name: VAULT_ROLE_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "secrets-manager.appRoleSecret" . }}
                  key: role_id
            - name: VAULT_SECRET_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "secrets-manager.appRoleSecret" . }}
                  key: secret_id
            {{- end }}
            {{- if .Values.vaultTLS.enabled }}
            - name: VAULT_CACERT
              value: {{ .Values.vaultTLS.mountDirectory }}/{{ .Values.vaultTLS.caFilename }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ include "secrets-manager.imageTag" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.vaultTLS.enabled }}
          volumeMounts:
            - name: vault-tls-certs
              mountPath: {{ .Values.vaultTLS.mountDirectory }}
              readOnly: true
        {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      {{- if .Values.vaultTLS.enabled }}
      volumes:
        - name: vault-tls-certs
          secret:
            secretName: {{ .Values.vaultTLS.secretName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
